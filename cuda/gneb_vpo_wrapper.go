package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/kuchkin/mumax3-gneb/cuda/cu"
	"github.com/kuchkin/mumax3-gneb/timer"
	"sync"
	"unsafe"
)

// CUDA handle for vpo kernel
var vpo_code cu.Function

// Stores the arguments for vpo kernel invocation
type vpo_args_t struct {
	arg_mx      unsafe.Pointer
	arg_my      unsafe.Pointer
	arg_mz      unsafe.Pointer
	arg_Bx      unsafe.Pointer
	arg_By      unsafe.Pointer
	arg_Bz      unsafe.Pointer
	arg_regions unsafe.Pointer
	arg_dt      float32
	arg_minend  int
	arg_noi     int
	arg_N       int
	arg_Nz      int
	argptr      [12]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for vpo kernel invocation
var vpo_args vpo_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	vpo_args.argptr[0] = unsafe.Pointer(&vpo_args.arg_mx)
	vpo_args.argptr[1] = unsafe.Pointer(&vpo_args.arg_my)
	vpo_args.argptr[2] = unsafe.Pointer(&vpo_args.arg_mz)
	vpo_args.argptr[3] = unsafe.Pointer(&vpo_args.arg_Bx)
	vpo_args.argptr[4] = unsafe.Pointer(&vpo_args.arg_By)
	vpo_args.argptr[5] = unsafe.Pointer(&vpo_args.arg_Bz)
	vpo_args.argptr[6] = unsafe.Pointer(&vpo_args.arg_regions)
	vpo_args.argptr[7] = unsafe.Pointer(&vpo_args.arg_dt)
	vpo_args.argptr[8] = unsafe.Pointer(&vpo_args.arg_minend)
	vpo_args.argptr[9] = unsafe.Pointer(&vpo_args.arg_noi)
	vpo_args.argptr[10] = unsafe.Pointer(&vpo_args.arg_N)
	vpo_args.argptr[11] = unsafe.Pointer(&vpo_args.arg_Nz)
}

// Wrapper for vpo CUDA kernel, asynchronous.
func k_vpo_async(mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Bx unsafe.Pointer, By unsafe.Pointer, Bz unsafe.Pointer, regions unsafe.Pointer, dt float32, minend int, noi int, N int, Nz int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("vpo")
	}

	vpo_args.Lock()
	defer vpo_args.Unlock()

	if vpo_code == 0 {
		vpo_code = fatbinLoad(vpo_map, "vpo")
	}

	vpo_args.arg_mx = mx
	vpo_args.arg_my = my
	vpo_args.arg_mz = mz
	vpo_args.arg_Bx = Bx
	vpo_args.arg_By = By
	vpo_args.arg_Bz = Bz
	vpo_args.arg_regions = regions
	vpo_args.arg_dt = dt
	vpo_args.arg_minend = minend
	vpo_args.arg_noi = noi
	vpo_args.arg_N = N
	vpo_args.arg_Nz = Nz

	args := vpo_args.argptr[:]
	cu.LaunchKernel(vpo_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("vpo")
	}
}

// maps compute capability on PTX code for vpo kernel.
var vpo_map = map[int]string{0: "",
	50: vpo_ptx_50}

// vpo PTX code for various compute capabilities.
const (
	vpo_ptx_50 = `
.version 7.5
.target sm_50
.address_size 64

	// .globl	vpo
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry vpo(
	.param .u64 vpo_param_0,
	.param .u64 vpo_param_1,
	.param .u64 vpo_param_2,
	.param .u64 vpo_param_3,
	.param .u64 vpo_param_4,
	.param .u64 vpo_param_5,
	.param .u64 vpo_param_6,
	.param .f32 vpo_param_7,
	.param .u32 vpo_param_8,
	.param .u32 vpo_param_9,
	.param .u32 vpo_param_10,
	.param .u32 vpo_param_11
)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<29>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<102>;
	.reg .b32 	%r<119>;
	.reg .f64 	%fd<12>;
	.reg .b64 	%rd<65>;


	mov.u64 	%SPL, __local_depot0;
	ld.param.u64 	%rd19, [vpo_param_0];
	ld.param.u64 	%rd20, [vpo_param_1];
	ld.param.u64 	%rd21, [vpo_param_2];
	ld.param.u64 	%rd22, [vpo_param_3];
	ld.param.u64 	%rd23, [vpo_param_4];
	ld.param.u64 	%rd24, [vpo_param_5];
	ld.param.u64 	%rd25, [vpo_param_6];
	ld.param.f32 	%f40, [vpo_param_7];
	ld.param.u32 	%r38, [vpo_param_8];
	ld.param.u32 	%r39, [vpo_param_9];
	ld.param.u32 	%r40, [vpo_param_10];
	ld.param.u32 	%r41, [vpo_param_11];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r42, %nctaid.x;
	mov.u32 	%r43, %ctaid.y;
	mov.u32 	%r44, %ctaid.x;
	mad.lo.s32 	%r45, %r43, %r42, %r44;
	mov.u32 	%r46, %ntid.x;
	mov.u32 	%r47, %tid.x;
	mad.lo.s32 	%r1, %r45, %r46, %r47;
	setp.ge.s32 	%p1, %r1, %r40;
	@%p1 bra 	$L__BB0_33;

	cvta.to.global.u64 	%rd27, %rd19;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd28, %r1, 4;
	add.s64 	%rd3, %rd27, %rd28;
	ld.global.f32 	%f1, [%rd3];
	cvta.to.global.u64 	%rd29, %rd20;
	add.s64 	%rd4, %rd29, %rd28;
	ld.global.f32 	%f2, [%rd4];
	cvta.to.global.u64 	%rd30, %rd21;
	add.s64 	%rd5, %rd30, %rd28;
	ld.global.f32 	%f3, [%rd5];
	cvta.to.global.u64 	%rd31, %rd22;
	add.s64 	%rd32, %rd31, %rd28;
	ld.global.nc.f32 	%f4, [%rd32];
	cvta.to.global.u64 	%rd33, %rd23;
	add.s64 	%rd34, %rd33, %rd28;
	ld.global.nc.f32 	%f5, [%rd34];
	cvta.to.global.u64 	%rd35, %rd24;
	add.s64 	%rd36, %rd35, %rd28;
	ld.global.nc.f32 	%f6, [%rd36];
	setp.eq.s32 	%p2, %r38, 0;
	@%p2 bra 	$L__BB0_3;

	div.s32 	%r48, %r40, %r41;
	div.s32 	%r49, %r1, %r48;
	div.s32 	%r50, %r41, %r39;
	div.s32 	%r51, %r49, %r50;
	setp.ne.s32 	%p3, %r51, 0;
	add.s32 	%r52, %r39, -1;
	setp.ne.s32 	%p4, %r51, %r52;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_33;

$L__BB0_3:
	mul.f32 	%f41, %f5, %f5;
	fma.rn.f32 	%f42, %f4, %f4, %f41;
	fma.rn.f32 	%f43, %f6, %f6, %f42;
	sqrt.rn.f32 	%f44, %f43;
	mul.f32 	%f7, %f44, %f40;
	cvt.f64.f32 	%fd1, %f7;
	setp.gtu.f64 	%p6, %fd1, 0d3F747AE147AE147B;
	mul.f32 	%f45, %f7, 0f3F22F983;
	cvt.rni.s32.f32 	%r118, %f45;
	cvt.rn.f32.s32 	%f46, %r118;
	mov.f32 	%f47, 0fBFC90FDA;
	fma.rn.f32 	%f48, %f46, %f47, %f7;
	mov.f32 	%f49, 0fB3A22168;
	fma.rn.f32 	%f50, %f46, %f49, %f48;
	mov.f32 	%f51, 0fA7C234C5;
	fma.rn.f32 	%f98, %f46, %f51, %f50;
	abs.f32 	%f9, %f7;
	add.s64 	%rd6, %rd1, 24;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;

$L__BB0_5:
	setp.leu.f32 	%p7, %f9, 0f47CE4780;
	mov.u32 	%r114, %r118;
	mov.f32 	%f94, %f98;
	@%p7 bra 	$L__BB0_13;

	setp.eq.f32 	%p8, %f9, 0f7F800000;
	@%p8 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_7;

$L__BB0_12:
	mov.f32 	%f55, 0f00000000;
	mul.rn.f32 	%f94, %f7, %f55;
	mov.u32 	%r114, %r118;
	bra.uni 	$L__BB0_13;

$L__BB0_4:
	mul.f32 	%f52, %f7, %f7;
	cvt.f64.f32 	%fd2, %f52;
	div.rn.f64 	%fd3, %fd2, 0dC034000000000000;
	add.f64 	%fd4, %fd3, 0d3FF0000000000000;
	mul.f64 	%fd5, %fd4, %fd2;
	div.rn.f64 	%fd6, %fd5, 0dC018000000000000;
	add.f64 	%fd7, %fd6, 0d3FF0000000000000;
	cvt.rn.f32.f64 	%f97, %fd7;
	bra.uni 	$L__BB0_18;

$L__BB0_7:
	mov.b32 	%r3, %f7;
	bfe.u32 	%r54, %r3, 23, 8;
	add.s32 	%r4, %r54, -128;
	shl.b32 	%r55, %r3, 8;
	or.b32  	%r5, %r55, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd61, 0;
	mov.u32 	%r111, 0;
	mov.u64 	%rd59, __cudart_i2opi_f;
	mov.u64 	%rd60, %rd1;

$L__BB0_8:
	.pragma "nounroll";
	ld.global.nc.u32 	%r56, [%rd59];
	mad.wide.u32 	%rd39, %r56, %r5, %rd61;
	shr.u64 	%rd61, %rd39, 32;
	st.local.u32 	[%rd60], %rd39;
	add.s64 	%rd60, %rd60, 4;
	add.s64 	%rd59, %rd59, 4;
	add.s32 	%r111, %r111, 1;
	setp.ne.s32 	%p9, %r111, 6;
	@%p9 bra 	$L__BB0_8;

	st.local.u32 	[%rd6], %rd61;
	mov.u32 	%r57, 4;
	sub.s32 	%r9, %r57, %r6;
	mov.u32 	%r58, 6;
	sub.s32 	%r59, %r58, %r6;
	mul.wide.s32 	%rd40, %r59, 4;
	add.s64 	%rd41, %rd1, %rd40;
	ld.local.u32 	%r112, [%rd41];
	ld.local.u32 	%r113, [%rd41+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p10, %r12, 0;
	@%p10 bra 	$L__BB0_11;

	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r12;
	shr.u32 	%r62, %r113, %r61;
	shl.b32 	%r63, %r112, %r12;
	add.s32 	%r112, %r62, %r63;
	mul.wide.s32 	%rd42, %r9, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.local.u32 	%r64, [%rd43];
	shr.u32 	%r65, %r64, %r61;
	shl.b32 	%r66, %r113, %r12;
	add.s32 	%r113, %r65, %r66;

$L__BB0_11:
	and.b32  	%r67, %r3, -2147483648;
	shr.u32 	%r68, %r113, 30;
	shl.b32 	%r69, %r112, 2;
	or.b32  	%r70, %r68, %r69;
	shr.u32 	%r71, %r70, 31;
	shr.u32 	%r72, %r112, 30;
	add.s32 	%r73, %r71, %r72;
	neg.s32 	%r74, %r73;
	setp.eq.s32 	%p11, %r67, 0;
	selp.b32 	%r114, %r73, %r74, %p11;
	setp.ne.s32 	%p12, %r71, 0;
	xor.b32  	%r75, %r67, -2147483648;
	selp.b32 	%r76, %r75, %r67, %p12;
	selp.b32 	%r77, -1, 0, %p12;
	xor.b32  	%r78, %r70, %r77;
	shl.b32 	%r79, %r113, 2;
	xor.b32  	%r80, %r79, %r77;
	cvt.u64.u32 	%rd44, %r78;
	cvt.u64.u32 	%rd45, %r80;
	bfi.b64 	%rd46, %rd44, %rd45, 32, 32;
	cvt.rn.f64.s64 	%fd8, %rd46;
	mul.f64 	%fd9, %fd8, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f53, %fd9;
	setp.eq.s32 	%p13, %r76, 0;
	neg.f32 	%f54, %f53;
	selp.f32 	%f94, %f53, %f54, %p13;

$L__BB0_13:
	and.b32  	%r19, %r114, 1;
	setp.eq.s32 	%p14, %r19, 0;
	selp.f32 	%f14, %f94, 0f3F800000, %p14;
	mul.rn.f32 	%f15, %f94, %f94;
	mov.f32 	%f95, 0fB94D4153;
	@%p14 bra 	$L__BB0_15;

	mov.f32 	%f57, 0fBAB607ED;
	mov.f32 	%f58, 0f37CBAC00;
	fma.rn.f32 	%f95, %f58, %f15, %f57;

$L__BB0_15:
	selp.f32 	%f59, 0f3C0885E4, 0f3D2AAABB, %p14;
	fma.rn.f32 	%f60, %f95, %f15, %f59;
	selp.f32 	%f61, 0fBE2AAAA8, 0fBEFFFFFF, %p14;
	fma.rn.f32 	%f62, %f60, %f15, %f61;
	mov.f32 	%f63, 0f00000000;
	fma.rn.f32 	%f64, %f15, %f14, %f63;
	fma.rn.f32 	%f96, %f62, %f64, %f14;
	and.b32  	%r81, %r114, 2;
	setp.eq.s32 	%p16, %r81, 0;
	@%p16 bra 	$L__BB0_17;

	mov.f32 	%f66, 0fBF800000;
	fma.rn.f32 	%f96, %f96, %f66, %f63;

$L__BB0_17:
	div.rn.f32 	%f97, %f96, %f7;

$L__BB0_18:
	setp.leu.f32 	%p17, %f9, 0f47CE4780;
	@%p17 bra 	$L__BB0_26;

	setp.eq.f32 	%p18, %f9, 0f7F800000;
	@%p18 bra 	$L__BB0_25;
	bra.uni 	$L__BB0_20;

$L__BB0_25:
	mov.f32 	%f69, 0f00000000;
	mul.rn.f32 	%f98, %f7, %f69;
	bra.uni 	$L__BB0_26;

$L__BB0_20:
	mov.b32 	%r20, %f7;
	bfe.u32 	%r83, %r20, 23, 8;
	add.s32 	%r21, %r83, -128;
	shl.b32 	%r84, %r20, 8;
	or.b32  	%r22, %r84, -2147483648;
	shr.u32 	%r23, %r21, 5;
	mov.u64 	%rd64, 0;
	mov.u32 	%r115, 0;
	mov.u64 	%rd62, __cudart_i2opi_f;
	mov.u64 	%rd63, %rd1;

$L__BB0_21:
	.pragma "nounroll";
	ld.global.nc.u32 	%r85, [%rd62];
	mad.wide.u32 	%rd49, %r85, %r22, %rd64;
	shr.u64 	%rd64, %rd49, 32;
	st.local.u32 	[%rd63], %rd49;
	add.s64 	%rd63, %rd63, 4;
	add.s64 	%rd62, %rd62, 4;
	add.s32 	%r115, %r115, 1;
	setp.ne.s32 	%p19, %r115, 6;
	@%p19 bra 	$L__BB0_21;

	st.local.u32 	[%rd6], %rd64;
	mov.u32 	%r86, 4;
	sub.s32 	%r26, %r86, %r23;
	mov.u32 	%r87, 6;
	sub.s32 	%r88, %r87, %r23;
	mul.wide.s32 	%rd50, %r88, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r116, [%rd51];
	ld.local.u32 	%r117, [%rd51+-4];
	and.b32  	%r29, %r21, 31;
	setp.eq.s32 	%p20, %r29, 0;
	@%p20 bra 	$L__BB0_24;

	mov.u32 	%r89, 32;
	sub.s32 	%r90, %r89, %r29;
	shr.u32 	%r91, %r117, %r90;
	shl.b32 	%r92, %r116, %r29;
	add.s32 	%r116, %r91, %r92;
	mul.wide.s32 	%rd52, %r26, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r93, [%rd53];
	shr.u32 	%r94, %r93, %r90;
	shl.b32 	%r95, %r117, %r29;
	add.s32 	%r117, %r94, %r95;

$L__BB0_24:
	and.b32  	%r96, %r20, -2147483648;
	shr.u32 	%r97, %r117, 30;
	shl.b32 	%r98, %r116, 2;
	or.b32  	%r99, %r97, %r98;
	shr.u32 	%r100, %r99, 31;
	shr.u32 	%r101, %r116, 30;
	add.s32 	%r102, %r100, %r101;
	neg.s32 	%r103, %r102;
	setp.eq.s32 	%p21, %r96, 0;
	selp.b32 	%r118, %r102, %r103, %p21;
	setp.ne.s32 	%p22, %r100, 0;
	xor.b32  	%r104, %r96, -2147483648;
	selp.b32 	%r105, %r104, %r96, %p22;
	selp.b32 	%r106, -1, 0, %p22;
	xor.b32  	%r107, %r99, %r106;
	shl.b32 	%r108, %r117, 2;
	xor.b32  	%r109, %r108, %r106;
	cvt.u64.u32 	%rd54, %r107;
	cvt.u64.u32 	%rd55, %r109;
	bfi.b64 	%rd56, %rd54, %rd55, 32, 32;
	cvt.rn.f64.s64 	%fd10, %rd56;
	mul.f64 	%fd11, %fd10, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f67, %fd11;
	setp.eq.s32 	%p23, %r105, 0;
	neg.f32 	%f68, %f67;
	selp.f32 	%f98, %f67, %f68, %p23;

$L__BB0_26:
	mul.f32 	%f26, %f97, %f40;
	add.s32 	%r36, %r118, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32 	%p24, %r37, 0;
	selp.f32 	%f27, %f98, 0f3F800000, %p24;
	mul.rn.f32 	%f28, %f98, %f98;
	mov.f32 	%f99, 0fB94D4153;
	@%p24 bra 	$L__BB0_28;

	mov.f32 	%f71, 0fBAB607ED;
	mov.f32 	%f72, 0f37CBAC00;
	fma.rn.f32 	%f99, %f72, %f28, %f71;

$L__BB0_28:
	selp.f32 	%f73, 0f3C0885E4, 0f3D2AAABB, %p24;
	fma.rn.f32 	%f74, %f99, %f28, %f73;
	selp.f32 	%f75, 0fBE2AAAA8, 0fBEFFFFFF, %p24;
	fma.rn.f32 	%f76, %f74, %f28, %f75;
	mov.f32 	%f101, 0f00000000;
	fma.rn.f32 	%f78, %f28, %f27, %f101;
	fma.rn.f32 	%f100, %f76, %f78, %f27;
	and.b32  	%r110, %r36, 2;
	setp.eq.s32 	%p26, %r110, 0;
	@%p26 bra 	$L__BB0_30;

	mov.f32 	%f80, 0fBF800000;
	fma.rn.f32 	%f100, %f100, %f80, %f101;

$L__BB0_30:
	mul.f32 	%f82, %f1, %f100;
	fma.rn.f32 	%f83, %f4, %f26, %f82;
	mul.f32 	%f84, %f2, %f100;
	fma.rn.f32 	%f85, %f5, %f26, %f84;
	mul.f32 	%f86, %f3, %f100;
	fma.rn.f32 	%f87, %f6, %f26, %f86;
	cvta.to.global.u64 	%rd57, %rd25;
	add.s64 	%rd58, %rd57, %rd2;
	ld.global.u8 	%rs1, [%rd58];
	setp.eq.s16 	%p27, %rs1, 255;
	selp.f32 	%f34, 0f00000000, %f83, %p27;
	selp.f32 	%f35, 0f00000000, %f85, %p27;
	selp.f32 	%f36, 0f3F800000, %f87, %p27;
	mul.f32 	%f88, %f35, %f35;
	fma.rn.f32 	%f89, %f34, %f34, %f88;
	fma.rn.f32 	%f90, %f36, %f36, %f89;
	sqrt.rn.f32 	%f37, %f90;
	setp.eq.f32 	%p28, %f37, 0f00000000;
	@%p28 bra 	$L__BB0_32;

	rcp.rn.f32 	%f101, %f37;

$L__BB0_32:
	mul.f32 	%f91, %f34, %f101;
	st.global.f32 	[%rd3], %f91;
	mul.f32 	%f92, %f35, %f101;
	st.global.f32 	[%rd4], %f92;
	mul.f32 	%f93, %f36, %f101;
	st.global.f32 	[%rd5], %f93;

$L__BB0_33:
	ret;

}

`
)
